[{"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\index.tsx":"1","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\reportWebVitals.ts":"2","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\App.tsx":"3","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\modules\\base_modules.ts":"4","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\components\\webtoon_container.tsx":"5","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\components\\kakao_login.jsx":"6"},{"size":501,"mtime":1609342390061,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":8510,"mtime":1609369506884,"results":"10","hashOfConfig":"8"},{"size":928,"mtime":1609264639354,"results":"11","hashOfConfig":"8"},{"size":1244,"mtime":1609368417437,"results":"12","hashOfConfig":"8"},{"size":817,"mtime":1609366584455,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3weylq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\index.tsx",[],["32","33"],"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\reportWebVitals.ts",[],"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\App.tsx",["34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"import View_a_webtoon from \"./components/webtoon_container\";\nimport KakaoSignUp from \"./components/kakao_login.jsx\";\nimport React, { useState } from \"react\";\nimport type { A_webtoon_info, Page_index } from \"./modules/base_modules\";\nimport { get_json_data } from \"./modules/base_modules\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\nconst webtoon_api_url = \"https://toy-projects-api.herokuapp.com/webtoon/all\";\nvar today_weeknum = new Date().getDay();\nlet page_array_num: number = 1;\n\n/*const useTitle = (initialTitle: any) => {\n  const [title, setTitle] = useState(initialTitle);\n  const updateTitle = () => {\n    const htmlTitle: any = document.querySelector(\"title\");\n    htmlTitle.innerText = title;\n  };\n  useEffect(updateTitle, [title]);\n  return setTitle;\n};\n const titleUpdater = useTitle(\"Loading...\");\nsetTimeout(() => titleUpdater(\"Home\"), 1000);*/\n\nlet webtoon_data: A_webtoon_info[] = get_json_data(webtoon_api_url);\nlet filtering_data: A_webtoon_info[] = webtoon_data.filter(function (element: A_webtoon_info) {\n  return element.weekday == today_weeknum;\n});\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    height: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  //modal\n  var subtitle: any;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#101820\";\n    subtitle.style.fontFamily = \"main_font\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const htmlTitle: any = document.querySelector(\"title\");\n  htmlTitle.innerText = \"WEBTOON HUB\";\n  const [target_data, change_target_data] = useState(filtering_data);\n  const [Userid, setUserid] = useState(\"guest\");\n  const a_webtoon: JSX.Element[] = target_data.map((target_data, index: number) => (\n    <View_a_webtoon\n      key={index}\n      title={target_data.title}\n      url={target_data.url}\n      img={target_data.img}\n      artist={target_data.artist}\n      service={target_data.service}\n      state={target_data.state}\n      weekday={target_data.weekday}\n    ></View_a_webtoon>\n  ));\n\n  let total_page_num: number;\n  let rest_webtoon_count: number = 0;\n  let page_array: Page_index[] = [];\n  let total_webtoon_count: number = a_webtoon.length;\n  if (total_webtoon_count % 9 == 0) {\n    total_page_num = total_webtoon_count / 9;\n  } else {\n    total_page_num = (total_webtoon_count - (total_webtoon_count % 9)) / 9 + 1;\n    rest_webtoon_count = total_webtoon_count % 9;\n  }\n  for (let i: number = 1; i <= total_page_num; i++) {\n    if (i < total_page_num) {\n      page_array[i] = {\n        page_item_start_num: (i - 1) * 9,\n        page_item_end_num: (i - 1) * 9 + 9,\n      };\n    } else {\n      page_array[i] = {\n        page_item_start_num: (i - 1) * 9,\n        page_item_end_num: (i - 1) * 9 + rest_webtoon_count,\n      };\n    }\n  }\n\n  const [view_start_num, change_view_start_num] = useState(0);\n  const [view_end_num, change_view_end_num] = useState(9);\n\n  //검색 기능\n  const [search_txt, change_search_txt] = useState(\"\");\n  const [fully_loading, change_fully_loading] = useState(false);\n  const set_search_txt = (e: any) => {\n    change_search_txt(e.target.value);\n    if (e.target.value == \"\") {\n      change_fully_loading(false);\n      change_target_data(filtering_data);\n    } else {\n      change_fully_loading(true);\n      change_target_data(search_data(e.target.value));\n    }\n  };\n\n  //페이지 인덱스\n  const page_index_maker = (first_page_array_num: number) => {\n    let index: number[] = [];\n    for (let i = 0; i < 6; i++) {\n      index[i] = first_page_array_num + i;\n    }\n    return index;\n  };\n\n  //하단 페이지 : 이동\n\n  const change_view_index = (num: number): void => {\n    change_view_start_num(page_array[num].page_item_start_num);\n    change_view_end_num(page_array[num].page_item_end_num);\n  };\n  //하단 페이지 : 보여지는 숫자값 변경&이동\n  const [page_index, part_of_change_page_index] = useState(page_index_maker(page_array_num));\n  const change_page_index = (num: number): void => {\n    part_of_change_page_index(page_index_maker(num));\n    change_view_index(num);\n  };\n\n  //하단 페이지 : 한번에 크게 이동\n  const View_more_webtoon = (prop: any) => {\n    return (\n      <a\n        className=\"view_select_item\"\n        onClick={() => {\n          switch (prop.move) {\n            case \">\":\n              if (page_array_num + 10 < total_page_num) {\n                page_array_num = page_array_num + 5;\n                change_page_index(page_array_num);\n              } else if (page_array_num + 5 < total_page_num) {\n                page_array_num = total_page_num - 5;\n                change_page_index(page_array_num);\n              }\n              break;\n            case \"<\":\n              if (page_array_num - 5 > 1) {\n                page_array_num = page_array_num - 5;\n                change_page_index(page_array_num);\n              } else if (page_array_num != 1) {\n                page_array_num = 1;\n                change_page_index(page_array_num);\n              }\n              break;\n          }\n        }}\n      >\n        {prop.txt}\n      </a>\n    );\n  };\n  const Webtoon_area = () => {\n    let viewing_webtoon: JSX.Element[] = a_webtoon.slice(view_start_num, view_end_num);\n    if (fully_loading) {\n      viewing_webtoon = a_webtoon;\n    } else {\n      viewing_webtoon = a_webtoon.slice(view_start_num, view_end_num);\n    }\n    return <ul className=\"content_area\">{viewing_webtoon}</ul>;\n  };\n\n  const View_page_index = () => {\n    let view_page_index: JSX.Element[] = [];\n    for (let i = 0; i < 6; i++) {\n      view_page_index.push(\n        <a\n          className=\"view_select_item\"\n          onClick={() => {\n            change_view_index(page_index[i]);\n            window.scrollTo(0, 0);\n          }}\n        >\n          {page_index[i]}\n        </a>,\n      );\n    }\n    if (fully_loading != true) {\n      return (\n        <span className=\"view_select\">\n          <View_more_webtoon move=\"<\" txt=\"<\" />\n          {view_page_index}\n          <View_more_webtoon move=\">\" txt=\">\" />\n        </span>\n      );\n    } else {\n      return <span className=\"view_select\" />;\n    }\n  };\n\n  const Webtoon_filter = () => {\n    let options: JSX.Element[] = [];\n    const index: string[] = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"완결\"];\n    const Filter_option = (prop: any) => {\n      return (\n        <li className=\"filter_option\">\n          <a\n            id={prop.id}\n            onClick={() => {\n              change_search_txt(\"\");\n              change_fully_loading(false);\n              change_target_data(filter_data(prop.filter_num));\n              page_array_num = 1;\n              change_view_start_num(0);\n              change_view_end_num(9);\n              window.scrollTo(0, 0);\n            }}\n          >\n            {prop.weekday}\n          </a>\n        </li>\n      );\n    };\n    for (let i = 0; i < 8; i++) {\n      options[i] = <Filter_option filter_num={i} weekday={index[i]} id={\"option_\" + i} />;\n    }\n    return <ul className=\"filter_container\">{options}</ul>;\n  };\n  return (\n    <div className=\"body\">\n      <div className=\"top_bar\">\n        <input type={\"text\"} value={search_txt} className=\"top_bar_search_box\" onChange={set_search_txt} />\n        <span className=\"top_bar_item\">\n          /SEARCH\n          <li style={{ paddingLeft: \"20px\" }} onClick={openModal}>\n            Login\n          </li>\n          <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\n            <h2 ref={(_subtitle) => (subtitle = _subtitle)}>WEBTOONHUB</h2>\n            <KakaoSignUp setUserid={setUserid} />\n          </Modal>\n        </span>\n      </div>\n      <Webtoon_filter />\n      <Webtoon_area />\n      <View_page_index />\n      {Userid}\n    </div>\n  );\n}\n\nfunction filter_data(num: number) {\n  var change_target_data = webtoon_data.filter(function (element: A_webtoon_info) {\n    return element.weekday == num;\n  });\n  return change_target_data;\n}\n\nfunction search_data(input_txt: string) {\n  var change_target_data = webtoon_data.filter(function (element: A_webtoon_info) {\n    return element.title.includes(input_txt) || element.artist.includes(input_txt);\n  });\n  return change_target_data;\n}\n\nexport default App;\n","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\modules\\base_modules.ts",["50","51"],"interface A_webtoon_info {\r\n  title: string;\r\n  artist: string;\r\n  url: string;\r\n  img: string;\r\n  service: string;\r\n  state: string;\r\n  weekday: number;\r\n}\r\n\r\ninterface Page_index {\r\n  page_item_start_num: number;\r\n  page_item_end_num: number;\r\n}\r\n\r\nconst get_json_data = (url: string) => {\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let json_data: any;\r\n  xmlhttp.onreadystatechange = () => {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      try {\r\n        json_data = JSON.parse(xmlhttp.responseText);\r\n      } catch (err) {\r\n        console.log(err.message + \" in \" + xmlhttp.responseText);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  xmlhttp.open(\"GET\", url, false); //true는 비동기식, false는 동기식 true로 할시 변수 변경전에 웹페이지가 떠버림\r\n  xmlhttp.send();\r\n  return json_data;\r\n};\r\n\r\nexport type { A_webtoon_info };\r\nexport type { Page_index };\r\nexport { get_json_data };\r\n","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\components\\webtoon_container.tsx",["52","53"],"import React from \"react\";\r\nimport type { A_webtoon_info } from \"../modules/base_modules\";\r\n\r\nclass View_a_webtoon extends React.Component<A_webtoon_info> {\r\n  render() {\r\n    let service_and_state: string;\r\n    if (this.props.state != \"\") {\r\n      service_and_state = this.props.service + \" / \" + this.props.state;\r\n    } else {\r\n      service_and_state = this.props.service;\r\n    }\r\n    return (\r\n      <a href={this.props.url}>\r\n        <li className=\"webtoon_container\">\r\n          <div className=\"webtoon_info\">\r\n            <ul className=\"webtoon_info_container\">\r\n              <li\r\n                style={{\r\n                  fontSize: \"10px\",\r\n                  listStyle: \"none\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {service_and_state}\r\n              </li>\r\n              <li style={{ fontSize: \"10px\", listStyle: \"none\" }}>{this.props.title}</li>\r\n              <li style={{ fontSize: \"8px\", listStyle: \"none\" }}>{this.props.artist}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"thumnail\">\r\n            <img src={this.props.img} className=\"thumnail_img\" />\r\n          </div>\r\n        </li>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default View_a_webtoon;\r\n","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\webtoon-hub-web\\src\\components\\kakao_login.jsx",["54"],"import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport KaKaoLogin from 'react-kakao-login';\r\n\r\nlet userid;\r\nclass KakaoSignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: 'kakao'\r\n        }\r\n    }\r\n    \r\n    responseKaKao = (res) => {\r\n        this.setState({\r\n            data: res\r\n        })\r\n        userid=this.state.data.profile.id\r\n        this.props.setUserid(userid)      \r\n    }\r\n\r\n    responseFail = (err) => {\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <>\r\n                    <KaKaoLogin\r\n                        onSuccess={this.responseKaKao}\r\n                        getProfile={true}\r\n                    />\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default KakaoSignUp;",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":26,"column":26,"nodeType":"63","messageId":"64","endLine":26,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":65,"column":5,"nodeType":"67","endLine":74,"endColumn":6},{"ruleId":"61","severity":1,"message":"62","line":81,"column":31,"nodeType":"63","messageId":"64","endLine":81,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":109,"column":24,"nodeType":"63","messageId":"64","endLine":109,"endColumn":26},{"ruleId":"68","severity":1,"message":"69","line":143,"column":7,"nodeType":"67","endLine":167,"endColumn":8},{"ruleId":"61","severity":1,"message":"70","line":160,"column":41,"nodeType":"63","messageId":"64","endLine":160,"endColumn":43},{"ruleId":"68","severity":1,"message":"69","line":186,"column":9,"nodeType":"67","endLine":192,"endColumn":10},{"ruleId":"61","severity":1,"message":"70","line":197,"column":23,"nodeType":"63","messageId":"64","endLine":197,"endColumn":25},{"ruleId":"65","severity":1,"message":"71","line":200,"column":11,"nodeType":"67","endLine":200,"endColumn":49},{"ruleId":"65","severity":1,"message":"71","line":202,"column":11,"nodeType":"67","endLine":202,"endColumn":49},{"ruleId":"68","severity":1,"message":"69","line":216,"column":11,"nodeType":"67","endLine":227,"endColumn":12},{"ruleId":"65","severity":1,"message":"72","line":234,"column":20,"nodeType":"67","endLine":234,"endColumn":90},{"ruleId":"65","severity":1,"message":"73","line":253,"column":7,"nodeType":"67","endLine":253,"endColumn":25},{"ruleId":"65","severity":1,"message":"74","line":254,"column":7,"nodeType":"67","endLine":254,"endColumn":23},{"ruleId":"65","severity":1,"message":"75","line":255,"column":7,"nodeType":"67","endLine":255,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":263,"column":28,"nodeType":"63","messageId":"64","endLine":263,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":20,"column":28,"nodeType":"63","messageId":"64","endLine":20,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":20,"column":51,"nodeType":"63","messageId":"64","endLine":20,"endColumn":53},{"ruleId":"61","severity":1,"message":"70","line":7,"column":26,"nodeType":"63","messageId":"64","endLine":7,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":31,"column":13,"nodeType":"67","endLine":31,"endColumn":66},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component View_a_webtoon must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","Imported JSX component View_more_webtoon must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Filter_option must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Webtoon_filter must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Webtoon_area must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component View_page_index must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]